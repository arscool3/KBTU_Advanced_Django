version: '3'

services:
  #  movie-app:
  #    container_name: movie-app
  #    depends_on:
  #      - db
  #      - kafka
  #      - zookeeper
  #      - redis
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    restart: on-failure
  #    entrypoint:
  #      - /start.fastapi.sh
  #    ports:
  #      - "8000:8000"
  #    expose:
  #      - 8000
  #
  #  db:
  #    container_name: db
  #    image: postgres:14
  #    restart: on-failure
  #    volumes:
  #      - postgres_data:/var/lib/postgresql/data/
  #    expose:
  #      - 5432
  #    environment:
  #      - POSTGRES_USER=postgres
  #      - POSTGRES_PASSWORD=123
  #      - POSTGRES_DB=endterm_db
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  journal-logger:
#    container_name: journal-logger
#    depends_on:
#      - db
#      - kafka
#      - zookeeper
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: always
#    entrypoint:
#      - /start.journal.sh
#
#  redis:
#    container_name: redis
#    image: redis:7
#    ports:
#      - 6379:6379
#
#  dramatiq:
#    container_name: dramatiq
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: always
#    entrypoint:
#      - /start.dramatiq.sh
volumes:
  postgres_data: