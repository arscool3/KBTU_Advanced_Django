version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: lms_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8081:8000"
    depends_on:
      kafka:
        condition: service_healthy

  dramatiq_worker:
    build: .
    command: dramatiq app.tasks
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      web:
        condition: service_started
      kafka:
        condition: service_healthy

volumes:
  postgres_data:
