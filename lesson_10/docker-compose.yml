version: "3"

# commented because too much loading my computer :(
# to run
# 1) docker-compose up
# 2) alembic upgrade head
# 3) python producer/producer.py | to run producer
# 4) uvicorn c_server.py --reload --port 8001 | to run consumer server
# 5) python i_script.py | to run insurance script
# 6) uvicorn main_app:app --reload
# 7) to see a heatmap go to http://127.0.0.1:8000/data/heatmap/

services:
#  main-web:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    restart: on-failure
#    container_name: main-web
#    depends_on:
#      - redis
#      - postgres
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env

#  redis:
#    image: redis:7

#  consumer-worker:
#    build: .
#    restart: on-failure
#    command: celery -A worker.celery worker --loglevel=info
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#    depends_on:
#      - redis
#      - main-web
#      - kafka_service
#    env_file:
#      - .env


#  producer-service:
#    restart: on-failure
#    build:
#      context: ./core
#      dockerfile: producer.Dockerfile
#    container_name: producer
#    env_file:
#      - .env
#    depends_on:
#      - kafka_service
#      - fake_binance

  kafka_service:
    restart: on-failure
    image: wurstmeister/kafka
    container_name: kafka_service
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka_service:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  zookeeper:
    restart: on-failure
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  postgres:
    restart: on-failure
    image: postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  fake_binance:
    restart: on-failure
    build:
      context: ./fake_binance
      dockerfile: Dockerfile
    container_name: fake_binance
    ports:
      - "8543:8543"

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka_service:9093


volumes:
  postgres_data: