version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9093

  db:
    image: postgres:14
    restart: always
    container_name: db
    environment:
      POSTGRES_DB: algo_service_fastapi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 191203
    volumes:
      - ./postgres-data:/var/lib/postgresql
    ports:
      - "5433:5432"

  binance-api:
    build:
      context: ./binance
    restart: always
    container_name: binance-api
    ports:
       - "8000:8000"
    depends_on:
      - kafka-ui

  algoservice1:
    build:
      context: ./algoservice1
    restart: always
    container_name: algoservice1
    ports:
      - "8001:8001"
    depends_on:
      - db

  algoservice2:
    build:
      context: ./algoservice2
    restart: always
    container_name: algoservice2
    ports:
      - "8002:8002"
    depends_on:
      - db

  heatmap-api:
    build:
      context: ./heatmap_api
    restart: always
    container_name: heatmap-api
    ports:
      - "8003:8003"
    depends_on:
      - db
