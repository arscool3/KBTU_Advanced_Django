version: "3"

services:
  auth_service:
    build:
      context: ./AuthenticationService
    restart: on-failure
    container_name: auth-service
    ports:
      - "8000:8000"

  email_service:
    build:
      context: ./EmailService
    restart: on-failure
    container_name: email-service
    ports:
      - "8001:8000"

  notification_service:
      build:
      context: ./NotificatinServuce
    restart: on-failure
    container_name: notification-service
    ports:
      - "8002:8000"
  
  courier_service:
      build:
      context: ./CourierService
    restart: on-failure
    container_name: courier-service
    ports:
      - "8003:8000"
  
  restaurant_service:
      build:
      context: ./RestaurantService
    restart: on-failure
    container_name: restaurant-service
    ports:
      - "8004:8000"
  
  customer_service:
      build:
      context: ./CustomerService
    restart: on-failure
    container_name: customer-service
    ports:
      - "8005:8000"
  
  db:
    image: "postgres:14"
    container_name: "db"
    restart: always
    enviroment:
      POSTGRES_PASSWORD=Dimash2003
      POSTGRES_USER=postgres
      POSTGRES_DB=delivery_service
    ports:
      - "5433:5432"
  
  redis:
    image: "redis:7"
    container_name: redis
    ports:
      - "6379:6379"
  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2180:2181"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9093

